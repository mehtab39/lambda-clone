<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('partials/head', { title: "Serverless Functions" }) %>

        <style>
            #output {
                border: 1px solid #ddd;
                padding: 10px;
                max-height: 400px;
                overflow-y: auto;
                background-color: #f9f9f9;
                font-family: monospace;
                white-space: pre-wrap;
            }

            #output p {
                margin: 0;
                padding: 2px;
                font-size: 14px;
            }

            .type-warn {
                color: #ff9800;
                background-color: #fff3e0;
                border-left: 3px solid #ff9800;
                padding-left: 5px;
            }

            .type-error {
                color: #f44336;
                background-color: #ffebee;
                border-left: 3px solid #f44336;
                padding-left: 5px;
            }

            .type-info {
                color: #2196f3;
                background-color: #e3f2fd;
                border-left: 3px solid #2196f3;
                padding-left: 5px;
            }
        </style>


</head>

<body>
    <%- include('partials/navigation') %>

        <h1>Serverless Functions</h1>
        <div id="functions-list">
            <ul>
                <% data.functions.forEach((item)=> { %>
                    <li>
                        <span>
                            <%= item %>
                        </span>
                        <div>
                            <button onclick="invokeFunction('<%= item %>')">Run</button>
                            <button onclick="editFunction('<%= item %>')">Edit</button>
                            <button onclick="deleteFunction('<%= item %>')">Delete</button>
                        </div>
                    </li>
                    <% }); %>
            </ul>
        </div>

        <div class="input-container">
            <textarea id="request-body" placeholder="Enter JSON body here..."></textarea>
            <button onclick="sendCustomBody()">Send Request</button>
        </div>

        <div id="output"></div>

        <script>
            async function invokeFunction(functionName) {
                const response = await fetch(`/v1/invoke/${functionName}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({})
                });

                if (!response.body) {
                    streamFunctionInfo('No response body', { type: 'warn' });
                    return;
                }

                const reader = response.body.getReader();
                const decoder = new TextDecoder();
                let result = '';

                const handleChunk = ({ done, value }) => {
                    if (done) {
                        return;
                    }

                    result += decoder.decode(value, { stream: true });
                    streamFunctionInfo(result, { type: 'info' });

                    reader.read().then(handleChunk).catch(error => {
                        console.error('Stream reading error:', error);
                        streamFunctionInfo('Error reading stream', { type: 'error' });
                    });
                };

                reader.read().then(handleChunk).catch(error => {
                    console.error('Stream reading error:', error);
                    streamFunctionInfo('Error reading stream', { type: 'info' });
                });
            }

            function streamFunctionInfo(data, options) {
                const { type } = options;
                const outputElement = document.getElementById('output');
                const p = document.createElement('p');
                p.textContent = data;
                p.className = `type-${type}`;
                outputElement.appendChild(p);
                outputElement.scrollTop = outputElement.scrollHeight;
            }


            async function sendCustomBody() {
                const functionName = prompt('Enter the function name to invoke:');
                if (!functionName) {
                    streamFunctionInfo('Function name is required!', { type: 'warn' });
                    return;
                }

                const bodyInput = document.getElementById('request-body').value;
                let bodyData;
                try {
                    bodyData = JSON.parse(bodyInput);
                } catch (e) {
                    streamFunctionInfo('Invalid JSON format! Ensure you use double quotes for keys and string values.', { type: 'warn' });
                    return;
                }

                const response = await fetch(`/v1/invoke/${functionName}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(bodyData)
                });
                const result = await response.text();
                streamFunctionInfo(result, { type: 'info' });
            }

            async function deleteFunction(functionName) {
                const confirmDelete = confirm(`Are you sure you want to delete the function "${functionName}"?`);
                if (!confirmDelete) return;

                const response = await fetch(`/v1/functions/${functionName}`, {
                    method: 'DELETE'
                });
                if (response.ok) {
                    streamFunctionInfo('Function deleted successfully', { type: 'info' });
                    window.location.reload(); // Reload the page to update the list
                } else {
                    streamFunctionInfo('error deleting function', { type: 'error' });
                }
            }

            function editFunction(functionName) {
                window.location.href = `../client/update/${functionName}`
            }
        </script>
</body>

</html>